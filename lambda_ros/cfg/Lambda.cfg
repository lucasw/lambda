#!/usr/bin/env python
PACKAGE="lambda_ros"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("reset_pressure", bool_t, 1, "reset all waves", False)
gen.add("reset_environment", bool_t, 1, "remove all reflectors", False)
gen.add("step", bool_t, 1, "if paused process one step", False)
gen.add("update_rate", double_t, 1,
    "Set to max to go as fast as possible, 0 will be paused", 1000.0, 0.0, 1000.0)
gen.add("publish_rate", double_t, 1,
    "Set to max to go as fast as possible, 0 will be paused", 100.0, 0.0, 100.0)

gen.add("audio_rate", double_t, 1,
    "Set to max to go as fast as possible, 0 will be paused", 1000.0, 200.0, 48000.0)
gen.add("click_value", double_t, 1,
    "the value to use with the click mode", 100.0, -2.0, 2.0)
click_enum = gen.enum([
  gen.const("pressure_impulse", int_t, 0, "positive impulse"),
  gen.const("wall", int_t, 1, "wall"),
  ], "click_mode")
# gen.add("click_mode", int_t, 0, "click mode", 0, 0, 2, edit_method=click_enum)

vis_enum = gen.enum([
  gen.const("none", str_t, "none", ""),
  gen.const("f", str_t, "f", "f"),
  gen.const("a", str_t, "a", "a"),
  gen.const("b", str_t, "b", "b"),
  gen.const("x", str_t, "x", "x"),
  gen.const("y", str_t, "y", "y"),
  gen.const("i", str_t, "i", "i"),
  gen.const("n", str_t, "n", "n"),
  ], "vis_mode")
gen.add("vis_mode", str_t, 0, "vis mode", "f", edit_method=vis_enum)

dir_enum = gen.enum([
  gen.const("left", int_t, 0, "left"),
  gen.const("top", int_t, 1, "top"),
  gen.const("right", int_t, 2, "right"),
  gen.const("bottom", int_t, 3, "bottom"),
  ], "dir")
gen.add("dir", int_t, 0, "dir", 0, 0, 3, edit_method=dir_enum)
gen.add("ind", int_t, 1,
    "index 0-3 for filter coefficients, or 0-2 for incident pressure past/present/future", 0, 0, 3)

exit(gen.generate(PACKAGE, "lambda_ros", "Lambda"))
